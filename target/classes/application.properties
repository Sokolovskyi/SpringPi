# ===============================
# = DATA SOURCE
# ===============================
#spring.datasource.url = jdbc:mysql://localhost:3306/spring-security-tutorial
spring.datasource.url = jdbc:sqlite:data.sqlite
spring.datasource.driver-class-name= org.sqlite.JDBC
#spring.datasource.username = root
#spring.datasource.password = admin
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

#app.name=Sqlite Sample App
#spring.profiles.active=dev
#comment above profile and uncoment line below to operate using https
#spring.profiles.active=https
#spring.mvc.view.prefix: /WEB-INF/jsp/
#spring.mvc.view.suffix: .jsp
#server.port=2003
#server.context-path=/v1

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.EJB3NamingStrategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.database-platform=com.example.configuration.SQLiteDialect

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?


